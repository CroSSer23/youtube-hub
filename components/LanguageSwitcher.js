import { useEffect, useState } from 'react';
import styles from '../styles/LanguageSwitcher.module.css';

export default function LanguageSwitcher() {
  const [locale, setLocale] = useState('uk');
  const [isClient, setIsClient] = useState(false);
  const translations = {
    uk: { language: '–ú–æ–≤–∞', switchTo: '–†—É—Å—Å–∫–∏–π' },
    ru: { language: '–Ø–∑—ã–∫', switchTo: '–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞' }
  };

  useEffect(() => {
    // –£–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –º—ã –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ
    setIsClient(true);
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –ª–æ–∫–∞–ª—å –∏–∑ localStorage
    try {
      const savedLocale = typeof window !== 'undefined' && window.localStorage 
        ? localStorage.getItem('locale') || 'uk' 
        : 'uk';
      setLocale(savedLocale);
    } catch (e) {
      console.error('–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ localStorage:', e);
    }
  }, []);

  const changeLanguage = (newLocale) => {
    try {
      if (typeof window !== 'undefined' && window.localStorage) {
        localStorage.setItem('locale', newLocale);
      }
      setLocale(newLocale);
      if (typeof window !== 'undefined') {
        window.location.reload();
      }
    } catch (e) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ —è–∑—ã–∫–∞:', e);
    }
  };

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —è–∑—ã–∫ –±–µ–∑–æ–ø–∞—Å–Ω–æ
  const getLanguageText = () => {
    try {
      return translations[locale]?.language || '–ú–æ–≤–∞';
    } catch (e) {
      return '–ú–æ–≤–∞';
    }
  };

  // –ï—Å–ª–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –µ—â–µ –Ω–µ –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
  if (!isClient) {
    return <div className={styles.languageSwitcher}></div>;
  }

  return (
    <div className={styles.languageSwitcher}>
      <span>{getLanguageText()}:</span>
      {locale === 'uk' ? (
        <button onClick={() => changeLanguage('ru')}>
          üá∑üá∫ –†—É—Å—Å–∫–∏–π
        </button>
      ) : (
        <button onClick={() => changeLanguage('uk')}>
          üá∫üá¶ –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞
        </button>
      )}
    </div>
  );
} 